<#@ template inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" #>
<#@ output extension=".cs" #>
<#@ smartHome processor="smartHomeDirectiveProcessor" requires="fileName='Test.sh'" #>

using System.Collections.Generic;
using System.Linq;
using System.Text;
using SmartHome;

namespace MyHome
{
    partial class MyHome_SimulatorGUI: SimulatorGUI
    {
        public MyHome_SimulatorGUI(Gateway g)
            : base(g) { }

<#
	bool heaterMng = false;
	bool lightMng = false;
	bool windowMng = false;
	bool blindMng = false;
	foreach (Floor floor in this.SmartHome.Floors){
		foreach (Room room in floor.Rooms){
			if(room.Heaters.Count>0){
				heaterMng=true;
			}
			if(room.Lights.Count>0){
				lightMng=true;
			}
			if(room.Windows.Count>0){
				windowMng=true;
			}
			foreach (Window window in room.Windows)
			{
				if(window.Blinds.Count>0)
				{
				   blindMng = true;
				}
			}

		}

	}
#>
        public override void observerRefreshDataGrid()
        {
<#
	if(heaterMng){
#>
             this.fillDataGridViewHeaters();
<#
	}
#>
<#
	if(windowMng){
#>
             this.fillDataGridViewWindows();
<#
	}
#>
<#
	if(lightMng){
#>
             this.filldataGridViewLigths();
<#
	}
#>
<#
	if(blindMng){
#>
             this.fillDataGridViewBlinds();
<#
	}
#>           
        }//observerRefreshDataGrid        
<#
	if(this.SmartHome.BlindSimulation!=null || this.SmartHome.LightSimulation!=null
		    || this.SmartHome.SmartEnergy!=null)
	{
#>
        public override void refreshTime()
        {
<# if(this.SmartHome.SmartEnergy!=null){
#>
            this.smartEnergy_refreshTime();
<#
	}
#>
<# if(this.SmartHome.LightSimulation!=null){
#>
            this.lightSimulation_refreshTime();
<#
	}
#>
<# if(this.SmartHome.BlindSimulation!=null){
#>
            this.blindSimulation_refreshTime();
<#
	}
#>
        }//refreshTime
<#
	}
#>
    }
}