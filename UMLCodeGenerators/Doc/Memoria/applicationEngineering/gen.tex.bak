%%==================================================================%%
%% Author : Abascal Fernández, Patricia                             %%
%% Author : Sánchez Barreiro, Pablo                                 %%
%% Version: 1.2, 15/05/2013                                         %%
%%                                                                  %%
%% Memoria del Proyecto Fin de Carrera                              %%
%% Application Engineering/Generadores de Código C#                 %%
%%==================================================================%%

Esta sección detalla la secuenciación de las plantillas de generación de código creadas para implementar el algoritmo de la sección anterior. La Figura~\ref{app:fig:templates} muestra dicha secuenciación.

\begin{figure}[!tb]
  \center
  \includegraphics[width=0.45\linewidth]{applicationEngineering/images/TemplatesAppEngineering.eps} \\
  \caption{Secuencia de ejecución de las plantillas de generación de código (Ingeniería de Aplicaciones)}
  \label{app:fig:templates}
\end{figure}

El punto de partida es idéntico al utilizado para la fase de \emph{Ingeniería del Dominio}; es decir, el generador de código llamado \imp{ProjectCreation}, el cual crea el proyecto Visual Studio 2010 para el producto concreto. Este plantilla invoca a su vez a la plantilla \imp{SpecificProduct}, que es la que gobierna el proceso de generación de código a nivel de \emph{Ingeniería de la Aplicación}. Para ello, se invocan las siguientes plantillas.

La plantilla \imp{ImplementationCleanMethods} procesa por cada uno de los caminos incluidos en el producto final, los paquetes pertenecientes a dicho camino y almacena sus clases e interfaces y las \emph{versiones limpias} de sus respectivos métodos siguiendo el algoritmo descrito en la Sección~\ref{application:sec:alg}.

Acto seguido, se invoca la plantilla \imp{CleanVersionClassCreation} para cada una de las clases e interfaces obtenidas mediante la invocación a la plantilla \imp{ImplementationCleanMethods}, recibe como argumento las \emph{versiones limpias} de los métodos y genera los ficheros fuente del producto específico acorde a la configuración elegida por el usuario.

Cada plantilla invocada hace uso a su vez de otras subplantillas, que al igual que en la fase de \emph{Ingeniería del Dominio}, se han obviado por razones de espacio y claridad.

Una vez implementados los generadores de código para la fase de \emph{Ingeniería de Aplicación}, procedimos a realizar las pruebas pertinentes.
