«EXTENSION javaApplicationExtensions::Extensions»

«DEFINE ApplicationRoot FOR uml::Model»
	«FOREACH ownedElement.typeSelect(uml::Model) AS element»
		«IF element.name=="Application"»
			«EXPAND applicationRootPackage FOR element»
		«ENDIF»
	«ENDFOREACH»
«ENDDEFINE»

«DEFINE applicationRootPackage FOR uml::Model»
	«EXPAND finalPackage FOREACH ownedElement.typeSelect(uml::Package)»
«ENDDEFINE»

«DEFINE finalPackage FOR uml::Package»
«IF this.name!="ApplicationModel"»
«FILE "/finalProduct/"+this.name.toFirstUpper()+".java"»package «this.name.toString().toFirstLower()»;
«FOREACH packageMerge AS pimport»
import «pimport.mergedPackage.name.toFirstLower()».*;«ENDFOREACH»

public cclass «this.name.toString().toFirstUpper()» extends«FOREACH packageMerge AS pimport SEPARATOR '&'» «pimport.mergedPackage.name» «ENDFOREACH» {
«EXPAND Definitions::definitions FOREACH ownedElement.typeSelect(uml::InstanceSpecification)»
	public «this.name.toString().toFirstUpper()»(){
		super();
		TypeEnum enumAux;
«EXPAND Instantation::generateList FOREACH ownedElement.typeSelect(uml::InstanceSpecification)»	
«getInstantationSentence()»
«EXPAND Inicialization::inicialization FOREACH ownedElement.typeSelect(uml::InstanceSpecification)»
«EXPAND Connection::connection FOREACH ownedElement.typeSelect(uml::Component)»
«EXPAND InitComponents::initComponents FOREACH ownedElement.typeSelect(uml::InstanceSpecification)»
	}
	
	public static void main (String [] args){
		«this.name.toString().toFirstUpper()» finalProduct=new «this.name.toString().toFirstUpper()»();
	}
}«ENDFILE»
«ENDIF»
«ENDDEFINE»	

«DEFINE mergeImport FOR uml::PackageMerge»
		import «this.mergedPackage.name».*;
«ENDDEFINE»