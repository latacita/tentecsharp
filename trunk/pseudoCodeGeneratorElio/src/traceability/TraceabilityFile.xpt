«EXTENSION javaSkeletonExtensions::TraceableFileExtension»

«AROUND skeletonTemplates::SkeletonRoot::SkeletonRoot FOR uml::Model»«openTraceabilityFile()»«targetDef.proceed()»«closeTraceabilityFile()»«ENDAROUND»

«AROUND skeletonTemplates::SkeletonRoot::architecturePackage FOR uml::Package»«targetDef.proceed()»«writeTraceabilityFile("UMLPackage",name,"Model."+name,"CJPackage",name,""+name+"/"+name+".java")»«writeTraceabilityFile("UMLPackage",name,"Model."+name,"CJFamilyClass",name,""+name+"/"+name+".java")»«ENDAROUND»

«AROUND skeletonTemplates::ComponentTemplate::componentTemplate FOR uml::Component»«targetDef.proceed()»«LET this.getNearestPackage().nestingPackage.name AS packageName»«writeTraceabilityFile("UMLComponent",name,"Model."+packageName+".ComponentView."+name,"CJComponentVirtualClass",name,""+packageName+"/"+name+".java")»«ENDLET»«ENDAROUND»

«AROUND skeletonTemplates::ComponentTemplate::propertiesDefinition FOR uml::Property»«targetDef.proceed()»«LET this.getNearestPackage().nestingPackage.name AS packageName»«LET this.class.name AS compName»«writeTraceabilityFile("UMLComponentProperty",name,"Model."+packageName+".ComponentView."+compName+"."+name,"CJVirtualClassMember",name,""+packageName+"/"+compName+".java/"+name)»«ENDLET»«ENDLET»«ENDAROUND»

«AROUND skeletonTemplates::ComponentTemplate::operations FOR uml::Property»«targetDef.proceed()»«LET this.getNearestPackage().nestingPackage.name AS packageName»«LET this.class.name AS compName»«writeTraceabilityFile("UMLComponentOperation",name,"Model."+packageName+".ComponentView."+compName+"."+name,"CJVirtualClassMethod",name,""+packageName+"/"+compName+".java/"+name)»«ENDLET»«ENDLET»«ENDAROUND»

«AROUND skeletonTemplates::PortTemplate::portTemplate FOR uml::Class»«targetDef.proceed()»«LET this.getNearestPackage().nestingPackage.name AS packageName»«LET ((uml::NamedElement) this.owner).name AS compName»«writeTraceabilityFile("UMLPortClass",name,"Model."+packageName+".ComponentView."+compName+"."+name,"CJPortVirtualClass",name,""+packageName+"/"+compName+".java/"+name)»«LET clientDependency.reject(e|e.metaType==uml::InterfaceRealization).supplier.name.intersect(clientDependency.supplier.name) AS requiredInterfaceList»«FOREACH requiredInterfaceList AS name»«writeTraceabilityFile("UMLRequiredInterface",name,"Model."+packageName+".ComponentView."+compName+"."+this.name+".clientDependency."+name,"CJVirtualClassMember","ports"+name,""+packageName+"/"+compName+".java/"+this.name+"/"+"ports"+name)»«writeTraceabilityFile("UMLRequiredInterface",name,"Model."+packageName+".ComponentView."+compName+"."+this.name+".clientDependency."+name,"CJVirtualClassMethod","connect",""+packageName+"/"+compName+".java/"+this.name+"/connect")»«ENDFOREACH»«FOREACH interfaceRealization.contract.getOperations() AS op»«writeTraceabilityFile("UMLProvidedInterface",op.name,"Model."+packageName+".ComponentView."+compName+"."+this.name+".interfaceRealization."+op.name,"CJVirtualClassMethod",op.name,""+packageName+"/"+compName+".java/"+this.name+"/"+op.name)»«ENDFOREACH»«ENDLET»«ENDLET»«ENDLET»«ENDAROUND»

«AROUND skeletonTemplates::ClassTemplate::classTemplate FOR uml::Class»«targetDef.proceed()»«LET this.getNearestPackage().nestingPackage.name AS packageName»«writeTraceabilityFile("UMLClass",name,"Model."+packageName+".ComponentView."+name,"CJVirtualClass",name,""+packageName+"/"+name+".java")»«FOREACH ownedElement.typeSelect(uml::Property) AS property»«writeTraceabilityFile("UMLClassMember",property.name,"Model."+packageName+".ComponentView."+name+"."+property.name,"CJVirtualClassMember",property.name,""+packageName+"/"+name+".java/"+property.name)»«ENDFOREACH»«FOREACH ownedElement.typeSelect(uml::Operation) AS operation»«writeTraceabilityFile("UMLClassMethod",name,"Model."+packageName+".ComponentView."+name+"."+operation.name,"CJVirtualClassMethod",operation.name,""+packageName+"/"+name+".java/"+operation.name)»«ENDFOREACH»«ENDLET»«ENDAROUND»

«AROUND skeletonTemplates::InnerClassTemplate::innerClassTemplate FOR uml::Class»«targetDef.proceed()»«LET this.getNearestPackage().nestingPackage.nestingPackage.name AS packageName»«writeTraceabilityFile("UMLClass",name,"Model."+packageName+".ComponentView."+name,"CJVirtualClass",name,""+packageName+"/"+name+".java")»«FOREACH ownedElement.typeSelect(uml::Property) AS property»«writeTraceabilityFile("UMLClassMember",property.name,"Model."+packageName+".ComponentView."+name+"."+property.name,"CJVirtualClassMember",property.name,""+packageName+"/"+name+".java/"+property.name)»«ENDFOREACH»«FOREACH ownedElement.typeSelect(uml::Operation) AS operation»«writeTraceabilityFile("UMLClassMethod",name,"Model."+packageName+".ComponentView."+name+"."+operation.name,"CJVirtualClassMethod",operation.name,""+packageName+"/"+name+".java/"+operation.name)»«ENDFOREACH»«ENDLET»«ENDAROUND»

«AROUND skeletonTemplates::InterfaceTemplate::interfaceTemplate FOR uml::Interface»«targetDef.proceed()»«LET this.getNearestPackage().nestingPackage.name AS packageName»«writeTraceabilityFile("UMLInterface",name,"Model."+packageName+".ComponentView."+name,"CJInterface",name,""+packageName+"/"+name+".java")»«FOREACH ownedElement.typeSelect(uml::Operation) AS op»«writeTraceabilityFile("UMLInterfaceMethod",op.name,"Model."+packageName+".ComponentView."+name+"."+op.name,"CJInterfaceMethod",op.name,""+packageName+"/"+name+".java/"+op.name)»«ENDFOREACH»«ENDLET»«ENDAROUND»

«AROUND skeletonTemplates::EnumerationTemplate::enumerationTemplate FOR uml::Enumeration»«targetDef.proceed()»«LET this.getNearestPackage().nestingPackage.name AS packageName»«writeTraceabilityFile("UMLEnumeration",name,"Model."+packageName+".ComponentView."+name,"CJEnumerationVirtualClass",name,""+packageName+"/"+name+".java")»«ENDLET»«ENDAROUND»
