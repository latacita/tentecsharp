<#@ template inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" #>
<#@ template language="c#v3.5" #>
<#@ output extension=".cs" #>
<#@ smartHome processor="smartHomeDirectiveProcessor" requires="fileName='Test.sh'" #>
using System;
using System.Collections.Generic;
using System.Text;
using System.Drawing;
using System.Windows.Forms;
using SmartHome;


namespace Program
{
	class Program
	{
		static void Main(string[] args)
		{
			Gateway g = new Gateway();
<#
			//Variables
			int i=0;
			int j=0;
			int cont=0;
			int contHeaterMng = 0;	
			int contLightMng = 0;	
			int contWindowMng = 0;	
			int contBlindMng = 0;
			bool heaterMng = false;
			bool lightMng = false;
			bool windowMng = false;
			bool blindMng = false;
			foreach (Floor floor in this.SmartHome.Floors)
		{
#>
			Floor f<#=i#> = new Floor("<#= floor.Name #>",<#= i#>);
<#		
			foreach (Room room in floor.Rooms)
			{
#>
			Room r<#=j#> = new Room("<#= room.Name #>",<#= j#>);
			f<#=i#>.addRoom(r<#=j#>);
<#			
				foreach (Heater heater in room.Heaters)
				{
					heaterMng = true;
#>
			HeaterCtrl h<#=contHeaterMng#> = new HeaterCtrl(<#= cont#>,<#= j#>);
<#
			cont++;
#>
			Thermometer t<#=contHeaterMng#> = new Thermometer(<#= cont#>,<#= cont-1#>);
<#
					contHeaterMng++;
					cont++;					
				}
				foreach (Light light in room.Lights)
				{
					lightMng = true;
#>
			LigthCtrl l<#=contLightMng#> = new LigthCtrl(<#= cont#>,<#= j#>);
<#
			cont++;
#>
            LigthSensor ls<#=contLightMng#> = new LigthSensor(<#= cont#>,<#= cont-1#>);
<#
					contLightMng++;
					cont++;
				}
#>
<#
				foreach (Window window in room.Windows)
				{
					windowMng = true;
#>
			WindowCtrl w<#=contWindowMng#> = new WindowCtrl(<#= cont#>,<#= j#>);
<#
					cont++;
#>
			WindowSensor ws<#=contWindowMng#> = new WindowSensor(<#= cont#>,<#= cont-1#>);
<#
					contWindowMng++;
					cont++;
						foreach (Blind blind in window.Blinds)
						{
							blindMng = true;
#>
			BlindCtrl b<#=contBlindMng#> = new BlindCtrl(<#= cont#>,<#=cont-2#>);
<#
					cont++;
#>
			BlindSensor bs<#=contBlindMng#> = new BlindSensor(<#= cont#>,<#=cont-1#>);
<#
					contBlindMng++;
					cont++;
						}
				}
#>
<#
			j++;
#>
<#		
			}
#>
<#
		i++; 
		}
		if(this.SmartHome.BlindSimulation!=null || this.SmartHome.LightSimulation!=null
		    || this.SmartHome.SmartEnergy!=null)
		{
#>
			Time time = new Time(14,00);
<#
		}
#>
			g.initBaseSystem();
<#
			//AQUÍ LOS INITS DEL GATEWAY
			if(heaterMng){ 
#>
			g.initHeaterMng();
<#
			}
#>
<#
			if(lightMng){ 
#>
			g.initLightMng();
<#
			}
#>
<#
			if(windowMng){ 
#>
			g.initWindowMng();
<#
			}
#>
<#
			if(blindMng){ 
#>
			g.initBlindMng();
<#
			}
#>
<#
			if(this.SmartHome.BlindSimulation!=null || this.SmartHome.LightSimulation!=null
		    || this.SmartHome.SmartEnergy!=null){ 
#>
			g.initTime(time);
<#
			}
#>
<#
			if(this.SmartHome.BlindSimulation!=null){ 
#>
			g.initBlindSimulation();
<#
			}
#>
<#
			if(this.SmartHome.LightSimulation!=null){ 
#>
			g.initLightSimulation();
<#
			}
#>
<#
			if(this.SmartHome.SmartEnergy!=null){ 
#>
			g.initSmartEnergyMng();
<#
			}
#>
<#
			int k=0;
			foreach (Floor floor in this.SmartHome.Floors)
			{
#>
			g.addFloor(f<#=k#>);
<#
				 k++;
#>
<#  
		    }
#>
<#
			if(heaterMng){
				for(int m=0; m<contHeaterMng; m++)
				{
#>			g.heaterMng_addHeaterCtrl(h<#=m#>);
			g.heaterMng_addThermometer(t<#=m#>);
<#
				}
			}
#>
<#
			if(lightMng){
				for(int m=0; m<contLightMng; m++)
				{
#>			g.lightMng_addLightCtrl(l<#=m#>);
			g.lightMng_addLightSensor(ls<#=m#>);
<#
				}
			}
#>
<#
			if(windowMng){
				for(int m=0; m<contWindowMng; m++)
				{
#>			g.windowMng_addWindowCtrl(w<#=m#>);
			g.windowMng_addWindowSensor(ws<#=m#>);
<#
				}
			}
#>
<#
			if(blindMng){
				for(int m=0; m<contBlindMng; m++)
				{
#>			g.blindMng_addBlindCtrl(b<#=m#>);
			g.blindMng_addBlindSensor(bs<#=m#>);
<#
				}
			}
#>
			SimulatorGUI sim = new SimulatorGUI(g);
            GatewayGUI gatewayGUI = new GatewayGUI(g,sim);
			gatewayGUI.addBaseSystem();
<#
			//AQUÍ LOS ADDS DEL GATEWAYGUI
			if(heaterMng){ 
#>
			gatewayGUI.addHeaterMng();
<#
			}
#>
<#
			if(lightMng){ 
#>
			gatewayGUI.addLightMng();
<#
			}
#>
<#
			if(windowMng){ 
#>
			gatewayGUI.addWindowMng();
<#
			}
#>
<#
			if(blindMng){ 
#>
			gatewayGUI.addBlindMng();
<#
			}
#>
<#
			if(this.SmartHome.BlindSimulation!=null){ 
#>
			gatewayGUI.addBlindSimulation();
<#
			}
#>
<#
			if(this.SmartHome.LightSimulation!=null){ 
#>
			gatewayGUI.addLightSimulation();
<#
			}
#>
<#
			if(this.SmartHome.SmartEnergy!=null){ 
#>
			gatewayGUI.addSmartEnergyMng();
<#
			}
#>
<#
			//AQUÍ LOS ADDS DEL SIMULATOR
			if(heaterMng){ 
#>
			sim.addHeaterMng();
<#
			}
#>
<#
			if(lightMng){ 
#>
			sim.addLightMng();
<#
			}
#>
<#
			if(windowMng){ 
#>
			sim.addWindowMng();
<#
			}
#>
<#
			if(blindMng){ 
#>
			sim.addBlindMng();
<#
			}
#>
<#
			if(this.SmartHome.BlindSimulation!=null){ 
#>
			sim.addBlindSimulation();
<#
			}
#>
<#
			if(this.SmartHome.LightSimulation!=null){ 
#>
			sim.addLightSimulation();
<#
			}
#>
<#
			if(this.SmartHome.SmartEnergy!=null){ 
#>
			sim.addSmartEnergyMng();
<#
			}
#>
			sim.Show();
            gatewayGUI.Show();            
            Application.Run(gatewayGUI);
            Application.Run(sim);
		}// Main
	}//Program
}//namespace
