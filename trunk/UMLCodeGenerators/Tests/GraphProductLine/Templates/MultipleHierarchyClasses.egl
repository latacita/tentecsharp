[%
////////////////////////////////////////////////////////////
//
// Author: Patricia Abascal Fernández
// Version: 1.3 
// Last modification: 28/02/2013 
// Description: This operation returns the multiple hierarchy
//				classes.
////////////////////////////////////////////////////////////
operation multipleHierarchyClasses(packages: Set): Set{
	// Each element of the set as follows: <ParentClass>, <PackageParentClass>, <ChildClass>, <PackageChildClass>
	var multipleHierarchyParents: Set;
	for (pack in packages) {
	    var classes=pack.packagedElement.select(e|e.isTypeOf(Class)); 
	 	for (class in classes) { 
			var hierarchy = class.hierarchy(); 
			// If it's multiple hierarchy
			if (hierarchy.size>1){   
				for (hierar in hierarchy){
					var tuple: List;
					var parents: List;
					var child: List;					
					// Parent Class
					parents.add(hierar.general);
					// Parent's package
					parents.add(hierar.general.package);
					// Child Class
					child.add(class); 
					// Child's package
					child.add(pack);
					
					tuple.add(parents);
					tuple.add(child);
					multipleHierarchyParents.add(tuple); 
				}//for-hierarchy 
			}//if-hierarchy-size
	     }//for-class 
	}//for-pack   
	 
	// Each element as follows: {{<ParentClasses>}, <ChildClass>, {<PackagesParentClasses>}, <PackageClass>}
	var finalList: Set; 
	for (elem1 in multipleHierarchyParents){  
		var final: List;
		var firstElem: List;  
		var thirdElem: List; 
		for (elem2 in multipleHierarchyParents){
			// If it's the same child
			if (elem1[1][0]==elem2[1][0] and elem1[0][0]<>elem2[0][0]){  
				// Parent Classes 
				firstElem.add(elem2[0][0]);
				firstElem.add(elem1[0][0]); 
				// Parent Packages
				thirdElem.add(elem2[0][1]);
				thirdElem.add(elem1[0][1]);  
			}//if 
	 	}//for
	 	// Parent Classes 
	 	final.add(firstElem); 
	 	// Child Class
		final.add(elem1[1][0]);
		// Parent Packages 
		final.add(thirdElem);   
		// Child Packages
		final.add(elem1[1][1]);  
		finalList.add(final); 
	}//for 
	return finalList;
}
%]