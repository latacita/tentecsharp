[%
////////////////////////////////////////////////////////////
//
// Author: Patricia Abascal Fernández
// Version: 1.3 
// Last modification: 03/03/2013 
// Description: This operation generates the methods of 
//				the current class.
////////////////////////////////////////////////////////////
import "ReturnParameterCreation.egl";
import "ParametersCreation.egl";
import "Operations.eol";
@template	
operation Class classMethods(currentPackage: String) {   		
	var opers: String;
	var operations_void : Sequence;	
	var operations_return: Sequence;
	// Generate the constructor
	opers=private()+currentPackage+"_init"+self.firstToUpperCase()+" () {}\n\t\t";
	
	// Generate the void methods	
	for (oper in self.AllOperations){	
		// Select those operations which doesn't have a type (the return type field is empty)	
		if (oper.type==null){
			operations_void.add(oper);
		}else{
			// And also select those operations whose return type is void
			if (oper.type.name.equals("void")){
				operations_void.add(oper);
			}
		} 				
	}
	for (oper in operations_void) {
		opers=opers+oper.visibility+" "+oper.esStatic()+virtual()+void()+currentPackage+"_"+oper.name+" ("+oper.parameters()+") {}\n\t\t";
	}	
	// Generate the return methods	
	for (oper in self.AllOperations){
		for (par in oper.ownedParameter){
			if (par.direction.toString().equals("return") and not par.type.name.equals("void")){							
				operations_return.add(oper);
			}					
		}
	}			
	for (oper in operations_return) {
		opers=opers+oper.visibility+" "+oper.esStatic()+virtual()+oper.type.name+" "+currentPackage+"_"+oper.name+" ("+oper.parameters()+") : "+oper.returnParameter()+"{}\n\t\t";
	}%]        	
	[%=opers%]
[%}%]